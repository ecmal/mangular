{
  "version": 3,
  "file": "build.js",
  "sourceRoot": "/Users/Sergey/Work/BB/wcb-project/mangular/src",
  "sources": [
    "build.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "const Fs =  system.node.require('fs');\nconst Path =  system.node.require('path');\nconst https =  system.node.require('https');\n\nvar TEMPLATES = [\n`system.register('mangular/angular/MODULENAME',['./angular'], function(system,module) {\n\n\"ANGULAR.SOURCE\";\n\nmodule.export('default',angular);\nreturn { setters:[function(){}], execute: function() {}};\n});`,\n`system.register('mangular/angular/MODULENAME',[], function(system,module) {\n\n\n\"ANGULAR.SOURCE\";\n\nmodule.export('default',angular);\nreturn { setters:[function(){}], execute: function() {}};\n});`\n];\n\nexport class Main{\n    private angularVersion:string;\n    private gitBaseUrl:string = '' ;\n    private config :Object ;\n\n    constructor(){\n        this.getConfiguration();\n        this.getFiles();\n    }\n\n    public static  changeModuleWrappers(data,file){\n        var [firstReplacement,secondReplacement] = TEMPLATES[0].split('\"ANGULAR.SOURCE\";');\n        var moduleName = Path.basename(file,'.js');\n        firstReplacement = firstReplacement.replace(/MODULENAME/,moduleName);\n        console.info(moduleName,firstReplacement);\n        data = [firstReplacement,data,secondReplacement].join('\\n');\n        return data;\n    }\n\n    public static changeCssWrappers(data){\n        return `export default \\`${data}\\`;`\n    }\n    public static changeAngularWrappers(data,file){\n        var [firstReplacement,secondReplacement] = TEMPLATES[1].split('\"ANGULAR.SOURCE\";');\n        var moduleName = Path.basename(file,'.js');\n        firstReplacement = firstReplacement.replace(/MODULENAME/,moduleName);\n        console.info(moduleName,firstReplacement);\n        data = [firstReplacement,data,secondReplacement].join('\\n');\n        return data;\n    }\n\n    public getConfiguration(){\n        let config  = Fs.readFileSync(Path.resolve(system.node.dirname,'../../config.json'));\n        this.config = JSON.parse(config.toString());\n    }\n\n    public getFiles(){\n        Object.keys(this.config).forEach( ( repo ) => {\n            Object.keys(this.config[repo].files).map((fileName)=>{\n                var destination = this.config[repo].files[fileName];\n                this.getFile(repo,this.config[repo].version,fileName,destination).then((options)=>{\n                    this.changeWrappers(options);\n                }).catch(e=>{\n                    console.info(e)\n                });\n            });\n        });\n    }\n    static createDir(path,recursive=false){\n        if(recursive){\n            var parts = Path.normalize(path).split(Path.sep);\n            path = '';\n            for (var i = 0; i < parts.length; i++) {\n                path += parts[i] + Path.sep;\n                if (!Fs.existsSync(path)) {\n                    Fs.mkdirSync(path, 0x1FD);\n                }\n            }\n        }else {\n            Fs.mkdirSync(path);\n        }\n    }\n    public writeToSrcDir(fileName,data){\n        let path  = Path.resolve(Path.resolve(system.node.dirname,'../../src'),fileName);\n        let dir = Path.dirname(path);\n        if(!Fs.existsSync(dir)){\n            Main.createDir(dir);\n        }\n        Fs.writeFileSync(path,data);\n        console.log(`${fileName} has been successfully added to src directory`)\n    }\n\n    public changeWrappers(options){\n        let file = options.file;\n        let data = options.data;\n        let dest = options.destination;\n        if(file=='angular.js'){\n            data = Main.changeAngularWrappers(data,file)\n        }else\n        if(Path.extname(file)=='.js'){\n            data = Main.changeModuleWrappers(data,file)\n        }\n        this.writeToSrcDir(dest,data);\n    }\n\n    public getFile(repo, version, file,destination){\n        try{\n            var path = `/${repo}/${version}/${file}`;\n            console.info(\"FETCH\",path);\n            return new Promise((resolve, reject)=> {\n                let req = https.request({\n                    host: 'raw.githubusercontent.com',\n                    path: path,\n                    method: 'GET',\n                }, (res) => {\n                    var data = '';\n                    res.on('data', (chunk) => {\n                        data += chunk;\n                    });\n                    res.on('end', () => {\n                        resolve({file,data,destination});\n                    });\n                    res.on('error', () => {\n                        reject(false)\n                    });\n                });\n                req.on('error',e=>reject(false));\n                req.end()\n            })\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n}\n//let stream = new Main();\nnew Main();"
  ]
}