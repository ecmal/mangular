{
  "version": 3,
  "file": "controller.js",
  "sourceRoot": "/Users/Grigor/work/ecmal/mangular/src",
  "sources": [
    "controller.ts"
  ],
  "names": [
    "mbNutron",
    "mbNutron.constructor",
    "mbNutron.percent",
    "mbNutron.onDeselect",
    "mbNutron.onSelect",
    "mbNutron.poll",
    "mbNutron.loadStuff",
    "mbNutron.onReorder",
    "mbNutron.onPaginate",
    "mbNutron.getTypes",
    "mbNutron.editComment"
  ],
  "mappings": "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",
  "sourcesContent": [
    "import {Component} from \"mangular/annotate\";\nimport {Inject} from \"mangular/annotate\";\nimport Template from \"./template\";\nimport desserts from \"./desserts\";\n\n@Component('mbNutron',{\n    template: Template,\n})\nclass mbNutron {\n\n    @Inject $http;\n    @Inject $mdEditDialog;\n    @Inject $q;\n    @Inject $timeout;\n    //@Inject $scope;\n\n    private selected;\n    private query;\n    private columns;\n    private desserts;\n    private promise;\n\n    constructor() {\n        this.selected = [];\n        this.query = {\n            order: 'name',\n            limit: 15,\n            page: 1\n        };\n        this.desserts = desserts.data;\n        this.onReorder = this.onReorder.bind(this);\n        this.onPaginate = this.onPaginate.bind(this);\n        this.onDeselect = this.onDeselect.bind(this);\n        this.onSelect = this.onSelect.bind(this);\n        this.loadStuff = this.loadStuff.bind(this);\n        this.poll = this.poll.bind(this);\n        this.poll();\n    }\n    percent(current,total){\n        return current*100/total;\n    }\n    onDeselect(item) {\n        console.log(item.name, 'was deselected');\n    }\n\n    onSelect(item) {\n        console.log(item.name, 'was selected');\n    }\n    poll(){\n        this.loadStuff().then(setTimeout(()=>this.poll(),5000))\n    }\n    loadStuff() {\n        return this.promise = this.$http({\n            method: 'GET',\n            url: '/api/agents'\n        }).then(s=>{\n            this.desserts = s.data.result;\n        });\n    }\n\n    onReorder(order) {\n\n        console.log('Scope Order: ' + this.query.order);\n        console.log('Order: ' + order);\n\n        this.promise = this.$timeout(function () {\n\n        }, 2000);\n    }\n\n    onPaginate(page, limit) {\n        // $scope.$broadcast('md.table.deselect');\n\n        console.log('Scope Page: ' + this.query.page + ' Scope Limit: ' + this.query.limit);\n        console.log('Page: ' + page + ' Limit: ' + limit);\n\n        this.promise = this.$timeout(function () {}, 2000);\n    }\n\n    getTypes() {\n        return ['fdr', 'fplus'];\n    }\n\n    editComment(event, dessert) {\n        event.stopPropagation();\n\n        var promise = this.$mdEditDialog.large({\n            // messages: {\n            //   test: 'I don\\'t like tests!'\n            // },\n            modelValue: dessert.comment,\n            placeholder: 'Add a comment',\n            save: function (input) {\n                dessert.comment = input.$modelValue;\n            },\n            targetEvent: event,\n            title: 'Add a comment',\n            validators: {\n                'md-maxlength': 30\n            }\n        });\n\n        promise.then((ctrl:any)=>{\n            var input = ctrl.getInput();\n            input.$viewChangeListeners.push(()=>{\n                input.$setValidity('test', input.$modelValue !== 'test');\n            });\n        });\n    }\n}\n\n"
  ]
}