{
  "version": 3,
  "file": "build.js",
  "sourceRoot": "/Users/Sergey/Work/BB/wcb-project/mangular/src",
  "sources": [
    "build.ts"
  ],
  "names": [
    "Main",
    "Main.constructor",
    "Main.changeModuleWrappers",
    "Main.changeCssWrappers",
    "Main.changeAngularWrappers",
    "Main.getConfiguration",
    "Main.getFiles",
    "Main.createDir",
    "Main.writeToSrcDir",
    "Main.changeWrappers",
    "Main.getFile"
  ],
  "mappings": "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",
  "sourcesContent": [
    "import * as Fs from 'node/fs';\nimport * as Path from 'node/path';\nimport * as https from \"node/https\";\n\nvar TEMPLATES = [`\nSystem.register(['./angular'], function(exports) {return { setters:[], execute: function() {\n\n\"ANGULAR.SOURCE\";\n\nexports('default',angular);\n\n}}});`,`\nSystem.register([], function(exports) { return { setters:[], execute: function() {\n\n\n\"ANGULAR.SOURCE\";\n\nexports('default',angular);\n\n}}});`];\nclass Main{\n    private angularVersion:string;\n    private gitBaseUrl:string = '' ;\n    private config :Object ;\n\n    constructor(){\n        this.getConfiguration()\n        this.getFiles();\n    }\n\n    public static  changeModuleWrappers(data){\n        var [firstReplacement,secondReplacement] = TEMPLATES[0].split('\"ANGULAR.SOURCE\";');\n        data = data.replace(/[(]function[(][-\\s]?window, angular, undefined[-\\s]?[)][-\\s]?[{]/,firstReplacement)\n            .replace(/}[)][(]window, window.angular[)][\\s\\S]*.*/,secondReplacement);\n        return data;\n    }\n\n    public static changeCssWrappers(data){\n        return `export default \\`${data}\\`;`\n    }\n    public static changeAngularWrappers(data){\n        var [firstReplacement,secondReplacement] = TEMPLATES[1].split('\"ANGULAR.SOURCE\";');\n        data = data.replace(/[(]function[(]window, document, undefined[)] [{]'use strict';/,firstReplacement)\n            .replace(/}[)][(]window, document[)];[\\s\\S]*.*/,secondReplacement);\n        return data;\n    }\n\n    public getConfiguration(){\n        let config  = Fs.readFileSync(Path.resolve(__dirname,'../../config.json'));\n        this.config = JSON.parse(config.toString());\n    }\n\n    public getFiles(){\n        Object.keys(this.config).forEach( ( repo ) => {\n            Object.keys(this.config[repo].files).map((fileName)=>{\n                var destination = this.config[repo].files[fileName];\n                this.getFile(repo,this.config[repo].version,fileName,destination).then((options)=>{\n                    this.changeWrappers(options);\n                }).catch(e=>{\n                    console.info(e)\n                });\n            });\n        });\n    }\n    static createDir(path,recursive=false){\n        if(recursive){\n            var parts = Path.normalize(path).split(Path.sep);\n            path = '';\n            for (var i = 0; i < parts.length; i++) {\n                path += parts[i] + Path.sep;\n                if (!Fs.existsSync(path)) {\n                    Fs.mkdirSync(path, 0x1FD);\n                }\n            }\n        }else {\n            Fs.mkdirSync(path);\n        }\n    }\n    public writeToSrcDir(fileName,data){\n        let path  = Path.resolve(Path.resolve(__dirname,'../../src'),fileName);\n        let dir = Path.dirname(path)\n        if(!Fs.existsSync(dir)){\n            Main.createDir(dir);\n        }\n        Fs.writeFileSync(path,data);\n        console.log(`${fileName} has been successfully added to src directory`)\n    }\n\n    public changeWrappers(options){\n        let file = options.file;\n        let data = options.data;\n        let dest = options.destination;\n        if(file=='angular.js'){\n            data = Main.changeAngularWrappers(data)\n        }else{\n            data = Main.changeModuleWrappers(data)\n        }\n        this.writeToSrcDir(dest,data);\n    }\n\n    public getFile(repo, version, file,destination){\n        try{\n            var path = `/${repo}/${version}/${file}`\n            console.info(\"FETCH\",path)\n            return new Promise((resolve, reject)=> {\n                let req = https.request({\n                    host: 'raw.githubusercontent.com',\n                    path: path,\n                    method: 'GET',\n                }, (res) => {\n                    var data = '';\n                    res.on('data', (chunk) => {\n                        data += chunk;\n                    });\n                    res.on('end', () => {\n                        resolve({file,data,destination});\n                    });\n                    res.on('error', () => {\n                        reject(false)\n                    });\n                });\n                req.on('error',e=>reject(false));\n                req.end()\n            })\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n}\n//let stream = new Main();\nnew Main();"
  ]
}