{
  "version": 3,
  "file": "menuToggle.js",
  "sourceRoot": "/Users/Grigor/work/ecmal/mangular/src",
  "sources": [
    "menuToggle.ts"
  ],
  "names": [
    "MenuToggle",
    "MenuToggle.constructor",
    "MenuToggle.link",
    "getTargetHeight"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;YAGA;gBAkCIA,oBAAoBA,IAAIA,EAAoBA,MAAMA,EAAqBA,OAAOA;oBAC1EC,UAAUA,CAACA,IAAIA,GAAGA,IAAIA,CAACA;oBACvBA,UAAUA,CAACA,MAAMA,GAAGA,MAAMA,CAACA;oBAC3BA,UAAUA,CAACA,OAAOA,GAAGA,OAAOA,CAACA;gBACjCA,CAACA;gBACMD,eAAIA,GAAXA,UAAYA,KAAKA,EAAEA,IAAIA,EAAEA,KAAKA;oBAC1BE,KAAKA,CAACA,MAAMA,GAAGA;wBACX,MAAM,CAAE,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;oBAC7D,CAAC,CAACA;oBACFA,KAAKA,CAACA,MAAMA,GAAGA;wBACX,UAAU,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;oBACvD,CAAC,CAACA;oBACFA,UAAUA,CAACA,MAAMA,CAACA,QAAQA,CAACA;wBACvB,KAAK,CAAC,MAAM,CACR;4BACI,MAAM,CAAE,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;wBAC7D,CAAC,EACD,UAAU,IAAI;4BACV,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;4BAC1B,IAAI,YAAY,GAAG,IAAI,GAAG,eAAe,EAAE,GAAG,CAAC,CAAC;4BAChD,UAAU,CAAC,OAAO,CAAC;gCACf,GAAG,CAAC,GAAG,CAAC,EAAC,MAAM,EAAE,YAAY,GAAG,IAAI,EAAC,CAAC,CAAC;4BAC3C,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;4BACb;gCACIC,IAAIA,YAAYA,CAACA;gCACjBA,GAAGA,CAACA,QAAQA,CAACA,eAAeA,CAACA,CAACA;gCAC9BA,GAAGA,CAACA,GAAGA,CAACA,QAAQA,EAAEA,EAAEA,CAACA,CAACA;gCACtBA,YAAYA,GAAGA,GAAGA,CAACA,IAAIA,CAACA,cAAcA,CAACA,CAACA;gCACxCA,GAAGA,CAACA,GAAGA,CAACA,QAAQA,EAAEA,CAACA,CAACA,CAACA;gCACrBA,GAAGA,CAACA,WAAWA,CAACA,eAAeA,CAACA,CAACA;gCACjCA,MAAMA,CAACA,YAAYA,CAACA;4BACxBA,CAACA;wBACL,CAAC,CACJ,CAAC;oBACN,CAAC,CAACD,CAACA;gBAEPA,CAACA;gBAtELF;oBAACA,oBAASA,CAACA,YAAYA,EAACA;wBACpBA,KAAKA,EAASA;4BACVA,OAAOA,EAAEA,GAAGA;yBACfA;wBACDA,QAAQA,EAAMA,yyBAsBbA;qBACJA,CAACA;oBAOcA,WAACA,iBAAMA,CAAAA;oBAAMA,WAACA,iBAAMA,CAACA,SAASA,CAACA,CAAAA;oBAAQA,WAACA,iBAAMA,CAACA,UAAUA,CAACA,CAAAA;;+BAqCzEA;gBAADA,iBAACA;YAADA,CAACA,AAvED,IAuEC",
  "sourcesContent": [
    "import {Directive,Inject} from \"mangular/annotate\"\nimport {Menu} from \"../services/menu\";\n\n@Directive('menuToggle',{\n    scope       : {\n        section: '='\n    },\n    template    : `\n    <md-button class=\"md-button-toggle\" ng-click=\"toggle()\"\n        aria-controls=\"docs-menu-{{section.name}}\"\n        aria-expanded=\"{{isOpen()}}\">\n        <div flex layout=\"row\">\n            {{section.name}}\n            <span flex></span>\n            <span aria-hidden=\"true\" class=\"md-toggle-icon\"\n            ng-class=\"{'toggled' : isOpen()}\">\n              <md-icon md-svg-src=\"md-toggle-arrow\"></md-icon>\n            </span>\n        </div>\n      <span class=\"md-visually-hidden\">\n        Toggle {{isOpen()? 'expanded' : 'collapsed'}}\n      </span>\n    </md-button>\n\n    <ul id=\"docs-menu-{{section.name}}\" class=\"menu-toggle-list\">\n      <li ng-repeat=\"page in section.pages\">\n        <menu-link section=\"page\"></menu-link>\n      </li>\n    </ul>\n    `\n})\nclass MenuToggle {\n\n    static menu :Menu;\n    static mdUtil :any;\n    static timeout :any;\n\n    constructor(@Inject Menu,@Inject('$mdUtil') mdUtil,@Inject('$timeout') timeout){\n        MenuToggle.menu = Menu;\n        MenuToggle.mdUtil = mdUtil;\n        MenuToggle.timeout = timeout;\n    }\n    static link(scope, elem, attrs) {\n        scope.isOpen = function() {\n            return  MenuToggle.menu.isSectionSelected(scope.section);\n        };\n        scope.toggle = function() {\n            MenuToggle.menu.toggleSelectSection(scope.section);\n        };\n        MenuToggle.mdUtil.nextTick(function() {\n            scope.$watch(\n                function () {\n                    return  MenuToggle.menu.isSectionSelected(scope.section);\n                },\n                function (open) {\n                    var $ul = elem.find('ul');\n                    var targetHeight = open ? getTargetHeight() : 0;\n                    MenuToggle.timeout(function () {\n                        $ul.css({height: targetHeight + 'px'});\n                    }, 0, false);\n                    function getTargetHeight() {\n                        var targetHeight;\n                        $ul.addClass('no-transition');\n                        $ul.css('height', '');\n                        targetHeight = $ul.prop('clientHeight');\n                        $ul.css('height', 0);\n                        $ul.removeClass('no-transition');\n                        return targetHeight;\n                    }\n                }\n            );\n        });\n\n    }\n}"
  ]
}